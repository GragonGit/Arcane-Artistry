plugins {
  id 'fabric-loom' version "${fabric_loom_version}"
  id 'checkstyle'
  id "com.github.ben-manes.versions" version "${gradle_update_version}"
}

version = project.mod_version

base {
  archivesName = project.archives_base_name
}

repositories {
  maven { url 'https://maven.blamejared.com' }
}

fabricApi {
  configureDataGeneration()
}

dependencies {
  // To change the versions see the gradle.properties file
  minecraft "com.mojang:minecraft:${project.minecraft_version}"
  mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

  // Fabric API. This is technically optional, but you probably want it anyway.
  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

  // Patchouli (Guidbook)
  modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
}

processResources {
  inputs.property "version", project.version

  filesMatching("fabric.mod.json") {
    expand project.properties
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.release = 17
}

java {
  // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
  // if it is present.
  // If you remove this line, sources will not be generated.
  withSourcesJar()

  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

jar {
  from("LICENSE") {
    rename { "${it}_${project.base.archivesName.get()}"}
  }
}

checkstyle {
  toolVersion = "10.17.0"
  showViolations = true
  maxWarnings = 0
}