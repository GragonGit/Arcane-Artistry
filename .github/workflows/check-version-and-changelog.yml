name: Check Changelog and Version

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-version-and-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Check for bypass label
        id: check_bypass
        uses: actions/github-script@v5
        with:
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const labels = pr.data.labels.map(label => label.name);
            return labels.includes('Keep Version');

      - name: Check if version and changelog are updated
        if: steps.check_bypass.outputs.result != 'true'
        run: |
          # Check if CHANGELOG.md is modified
          if ! git diff --name-only HEAD^1 HEAD | grep -q "CHANGELOG.md"; then
            echo "CHANGELOG.md not modified" >&2
            exit 1
          fi

          # Check if gradle.properties is modified and mod_version updated
          if ! git diff --name-only HEAD^1 HEAD | grep -q "gradle.properties"; then
            echo "gradle.properties not modified" >&2
            exit 1
          fi

          # Check if mod_version is incremented
          current_version=$(grep "^mod_version=" gradle.properties | cut -d'=' -f2)
          previous_version=$(git show HEAD^1:gradle.properties | grep "^mod_version=" | cut -d'=' -f2)

          if [ "$current_version" = "$previous_version" ]; then
            echo "mod_version not updated" >&2
            exit 1
          fi

          echo "CHANGELOG.md and mod_version are updated"
